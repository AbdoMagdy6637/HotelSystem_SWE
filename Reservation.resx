<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wAfCQykl5X//2Q==
</value>
  </data>
</root>